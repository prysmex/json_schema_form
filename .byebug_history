self[:allOf]&.find{|condition| condition.dig(:if, :properties, dependent_on, :enum).include(value) }
self[:allOf]&.find{|condition| condition.dig(:if, :properties, dependent_on, :enum).include?(value) }
value
enum
type
c
type
c
self[:allOf]&.find{|condition| condition.dig(:if, :properties, dependent_on, :enum) == value }
cond_path
self[:allOf]&.find{|condition| condition.dig(:if, :properties, dependent_on, *cond_path) == value }
c
type
c
type
exit
self[:allOf]&.find{|condition| condition.dig(:if, :properties, dependent_on, *cond_path) == value }
cond_path
type
c
type
exit
self[:allOf]&.find{|condition| condition.dig(:if, :properties, dependent_on, *cond_path) == value }
dependent_on
dependent_on,
value
self[:allOf]&.find{|condition| condition.dig(:if, dependent_on, *cond_path) == value }
self[:allOf]
cond_path
self.class::CONDITION_TYPE_TO_PATH
self.class
c
form[:properties][:header_1].class
form[:properties][:header_1]
form_example[:properties][:header_1]
c
form_example[:properties][:header_1].class
form_example[:properties][:header_1]
c
exit
c
form_example
next
