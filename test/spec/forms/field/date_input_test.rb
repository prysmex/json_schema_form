# frozen_string_literal: true

require 'test_helper'
require_relative 'concerns/base'

class DateInputTest < Minitest::Test
  include BaseFieldTests

  ###############
  # VALIDATIONS #
  ###############

  # @todo

  ###########
  # METHODS #
  ###########

  def test_sample_value
    field = JSF::Forms::Field::DateInput.new(JSF::Forms::FormBuilder.example('date_input'))
    sample = field.sample_value

    assert_equal true, JSONSchemer.schema(field.legalize!.as_json).valid?(sample)
  end

  # UTC
  # 2023-11-01T18:24:25Z
  # 2023-11-01T18:24:25.5Z
  # 2023-11-01T18:24:25.50Z
  # 2023-11-01T18:24:25.500Z
  # 2023-11-01T18:24:25.500623Z
  # 2023-11-01t18:24:25z
  # 2023-11-01t18:24:25.500z
  # 2023-11-01 18:24:25Z
  # 2023-11-01 18:24:25z
  # 2023-11-01 18:24:25.5Z
  # 2023-11-01 18:24:25.50Z
  # 2023-11-01 18:24:25.500Z
  # 2023-11-01 18:24:25.500623Z
  # 2023-11-01 18:24:25.500z
  # 2023-11-01 18:24:25.500623z
  # 2023-11-01 18:24:25-00:00
  # 2023-11-01 18:24:25.500-00:00
  # 2023-11-01T18:24:25-00:00
  # 2023-11-01T18:24:25.500-00:00
  # 2023-11-01T18:24:25+00:00
  # 2023-11-01T18:24:25.500+00:00

  # Other
  # 2023-11-01T11:24:25-07:00
  # 2023-11-01T11:24:25.5-07:00
  # 2023-11-01T11:24:25.50-07:00
  # 2023-11-01T11:24:25.500-07:00
  # 2023-11-01T11:24:25.500623-07:00
  # 2023-11-01 11:24:25-07:00
  # 2023-11-01 11:24:25.5-07:00
  # 2023-11-01 11:24:25.50-07:00
  # 2023-11-01 11:24:25.500-07:00
  # 2023-11-01 11:24:25.500623-07:00
  # 2023-11-02T03:09:25+08:45
end